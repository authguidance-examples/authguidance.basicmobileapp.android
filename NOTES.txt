PRIORITY
--------
1. Use view model classes with a view folder layout similar to React
   Can I bind to methods how I'd like, and have fields that are watched?
   Use view model classes for iOS once complete, if code has been improved

2. Finish device not secured fragment and use a lighter green
   Ensure that deep links do not run views they should not
   In device secured both user and session details should be hidden

3. Remove instances of finding fragments / activities and calling methods on them
   Only reference to parent is in onAttach
   ErrorSummary should find parent fragment --> if not found then use activity
   Getting a fragment and asking it to re-render might be OK

MINOR
-----
1. Test back navigation after a deep link to transactions
   Navigate back to the home view after a company id of 3 / abc used to use this
   However, API errors show in back navigation so remove this type of code since it adds complexity

    that.mainActivity.navController.popBackStack()
    that.mainActivity.onHome()

2. References to global objects in fragments
   Understand implications for all tech stacks
   Set windowRef to null in onDisappear

3. Deep link when Safari View Controller active for iOS to ignore
   Add isTopMost logic

4. iOS device check to also check biometrics only

5. Android blank out Okta logoutEndpoint from config and use end session endpoint from metadata

6. Use a strings source file in iOS

7. Android to use consistent ids with lower case and underscores
